name: Linting and deploy

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: npm
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Run eslint üê±‚Äçüíª
      run: npm run lint:check
  docker_build:
    needs: linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build docker image
      run: docker build -t ${{secrets.DOCKER_USER}}/devops-kpi:latest .
  dockerhub_update:
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build docker image
      run: docker build -t ${{secrets.DOCKER_USER}}/devops-kpi:latest .
    - name: Login to docker hub
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Push to docker hub
      run: docker push ${{secrets.DOCKER_USER}}/devops-kpi:latest
  test_api:
    needs: dockerhub_update
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Pull docker image
      run: docker pull ${{secrets.DOCKER_USER}}/devops-kpi
    - name: Run docker container
      run: docker run --rm --memory="64M" --cpus="1.5" -p 80:4000 --name devops-kpi-container ${{secrets.DOCKER_PASSWORD}}/devops-kpi:latest
    - name: Call API
      uses: indiesdev/curl@v1.1
      id: api
      with:
        url: http://localhost:80/
        method: "GET"
        accept: 200
        log-response: true
    - name: Check api OK status
      if: steps.api.outputs.response.status != '200'
      run: exit 1